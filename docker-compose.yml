version: '3'
services:
  database:
    image: mysql:8.0.32
    container_name: mysql_container
    restart: always
    command: --init-file /data/application/init.sql
    volumes:
      - ./conf/db/init.sql:/data/application/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - DB_NAME = MyFood_PF
    ports:
      - 3307:3306
    networks:
      - pf_nsl_network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    container_name: phpmyadmin_container
    ports:
      - 81:80
    environment:
      - PMA_PORT=3306
      - PMA_HOST=mysql_container
    depends_on:
      - database
    networks:
      - pf_nsl_network

  redis:
    image: redis:7.0.9-alpine3.17
    restart: always
    container_name: redis_container
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    depends_on:
      - database
    volumes:
      - ./conf/redis/cache:/data

  # spring:
  #   image: openjdk:17.0.2-jdk-oraclelinux8
  #   container_name: spring_container
  #   restart: always
  #   working_dir: /app
  #   ports:
  #     - 82:8080
  #   networks:
  #     - pf_nsl_network
  #   volumes:
  #     - ./backend/spring/target/spring-0.0.1-SNAPSHOT.jar:/app/server.jar
  #   command: "java -jar server.jar"
  #   depends_on:
  #     - database

  spring_dev:
    container_name: spring_dev_container
    build: backend/spring
    restart: always
    working_dir: /app
    ports:
      - 8080:8080
    networks:
      - pf_nsl_network
    volumes:
      - ./backend:/app
    command: "mvn spring-boot:run"
    depends_on:
      - database

  # dragonfly:
  #   image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
  #   container_name: dragonfly_container
  #   ulimits:
  #     memlock: -1
  #   ports:
  #     - "6379:6379"
  #   # For better performance, consider `host` mode instead `port` to avoid docker NAT.
  #   # `host` mode is NOT currently supported in Swarm Mode.
  #   # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
  #   # network_mode: "host"
  #   depends_on:
  #     - database
  #   networks:
  #     - pf_nsl_network
  #   volumes:
  #     - ./conf/dragonfly/cache:/data

networks:
  pf_nsl_network:
